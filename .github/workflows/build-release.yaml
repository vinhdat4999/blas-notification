name: build and release

on:
  push:
    branches: [ main, develop ]

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      serviceName: ${{steps.extractName.outputs.serviceName}}
      serviceVersion: ${{steps.extractVersion.outputs.serviceVersion}}
      serviceChartVersion: ${{steps.extractChartVersion.outputs.serviceChartVersion}}

    steps:
      - uses: actions/checkout@v4

      - name: Install xmllint tool
        shell: bash
        continue-on-error: true
        run: |
          sudo apt-get clean
          sudo apt-get install -f
          sudo dpkg --configure -a
          sudo apt-get update
          sudo apt-get install libxml2-utils

      - name: Extract service name pom.xml
        id: extractName
        run: |
          serviceName=$(xmllint --xpath '/*[local-name()="project"]/*[local-name()="artifactId"]/text()' pom.xml)
          echo "serviceName=$serviceName"
          echo "serviceName=$serviceName" >> $GITHUB_OUTPUT

      - name: Extract chart version
        id: extractChartVersion
        run: |
          serviceChartVersion=$(yq e .version ./charts/${{ steps.extractName.outputs.serviceName }}/Chart.yaml)
          echo "serviceChartVersion=$serviceChartVersion"
          echo "serviceChartVersion=$serviceChartVersion" >> $GITHUB_OUTPUT

      - name: Extract application version from pom.xml
        id: extractVersion
        run: |
          serviceVersion=$(xmllint --xpath '/*[local-name()="project"]/*[local-name()="version"]/text()' pom.xml | sed "s/-SNAPSHOT//")
          echo "serviceVersion=$serviceVersion"
          echo "serviceVersion=$serviceVersion" >> $GITHUB_OUTPUT

      - name: Compare chart version and pom version
        id: compareVersions
        run: |
          serviceChartVersion="${{ steps.extractChartVersion.outputs.serviceChartVersion }}"
          serviceVersion="${{ steps.extractVersion.outputs.serviceVersion }}"

          echo "Comparing versions: Chart Version=$serviceChartVersion, POM Version=$serviceVersion"

          if [ "$serviceChartVersion" != "$serviceVersion" ]; then
            echo "❌ Versions not match: Chart Version ($serviceChartVersion) != POM Version ($serviceVersion)"
            exit 1
          else
            echo "✅ Versions match: Chart Version ($serviceChartVersion) == POM Version ($serviceVersion)"
          fi
  

  build-and-release:
    needs: prepare
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          GITHUB_ACTOR: ${{ env.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.PACKAGE }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      #      - name: Set up Helm
      #          uses: azure/setup-helm@v3
      #          with:
      #            version: v3.11.2

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Package Helm chart
        run: helm package ./${{ needs.prepare.outputs.serviceName }}

      - name: Update Helm repo index
        run: helm repo index . --url https://vinhdat4999.github.io/blas-helm-repository/

      - name: Commit changes
        run: |
          git config --global user.email "vinhdat4999@gmail.com"
          git config --global user.name "DatNguyen"
          git add .
          git commit -m "Update Helm chart"
          git push

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.prepare.outputs.serviceName }}:${{ needs.prepare.outputs.serviceVersion }}

      - name: Logout from Docker Hub
        run: docker logout
